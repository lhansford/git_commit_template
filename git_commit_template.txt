# Title: Summary, imperative, start upper case, don't end with a period
# No more than 50 chars. #### 50 chars is here: #

# Remember blank line between title and body.

# See links to relevant web pages, issue trackers, blog articles, etc.
# See: https://example.com/
# See: [Example Page](https://example.com/)

# List all co-authors, so version control systems can connect teams.
# Co-authored-by: Name <name@example.com>
# Co-authored-by: Name <name@example.com>

# Body: Explain *what* and *why* (not *how*).
# Wrap at 72 chars. ################################## which is here: #

# Why:

# This change addresses the need by:

# FOR REFERENCE
#
# How to Write a Git Commit Message:
# https://chris.beams.io/posts/git-commit/
#
# 1.Separate subject from body with a blank line
# 2. Limit the subject line to 50 characters
# 3. Capitalize the subject line
# 4. Do not end the subject line with a period
# 5. Use the imperative mood in the subject line
# 6. Wrap the body at 72 characters
# 7. Use the body to explain what and why vs. how
#
# Subject line imperative uppercase verbs:
#
#     Add = Create a capability e.g. feature, test, dependency.
#     Drop = Delete a capability e.g. feature, test, dependency.
#     Fix = Fix an issue e.g. bug, typo, accident, misstatement.
#     Bump = Increase the version of something e.g. a dependency.
#     Make = Change the build process, or tools, or infrastructure.
#     Start = Begin doing something; e.g. enable a toggle, feature flag, etc.
#     Stop = End doing something; e.g. disable a toggle, feature flag, etc.
#     Optimize = A change that MUST be just about performance, e.g. speed up code.
#     Document = A change that MUST be only in the documentation, e.g. help files.
#     Refactor = A change that MUST be just refactoring.
#     Reformat = A change that MUST be just format, e.g. indent line, trim space, etc.
#     Rephrase = A change that MUST be just textual, e.g. edit a comment, doc, etc.

